<launch>
    <arg name="world"        default="worlds/wavetank.world"/>
    <!-- <arg name="world"        default="worlds/dataset.world"/> -->

    <!-- Groundtruth/Gazebo bbox related params -->
    <arg name="gt_save"      default="false"/>
    <arg name="gt_freq"      default="3"/>
    <arg name="gt_path"      default="$(find osl_network)/data/"/>

    <!-- Yolo related params -->
    <arg name="yolo_predict" default="false"/>
    <arg name="yolo_network" default="$(find osl_network)/models/yolov3.cfg"/>
    <arg name="yolo_weights" default="$(find osl_network)/models/yolov3_200415.weights"/>
    <arg name="yolo_classes" default="$(find osl_network)/data/classes.txt"/>

    <!-- The save and freq param can be set later for enabling disabling the saving of data -->
    <param name="gt_save"  value="$(arg gt_save)"/>
    <param name="gt_freq"  value="$(arg gt_freq)"/>
    <param name="gt_path"  value="$(arg gt_path)"/>
    <param name="yolo_network" value="$(arg yolo_network)"/>
    <param name="yolo_weights" value="$(arg yolo_weights)"/>
    <param name="yolo_classes" value="$(arg yolo_classes)"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name"   value="$(arg world)"/>
        <arg name="paused"       value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui"          value="true"/>
        <arg name="headless"     value="false"/>
        <arg name="debug"        value="false"/>
        <arg name="verbose"      value="false"/>
    </include>

    <!-- <include file="$(find bluerov2_gazebo)/launch/start_pid_controller_demo.launch">
        <arg name="teleop_on" value="true"/>
    </include> -->

    <!-- Add the bluerov2 vehicle to the world simulation (namespace: bluerov2) -->
    <include file="$(find bluerov2_description)/launch/upload_bluerov2.launch">
        <arg name="namespace" value="bluerov2"/>
        <arg name="x" value="0"/>
        <arg name="y" value="0"/>
        <arg name="z" value="-.3"/>
        <arg name="yaw" value="0"/>
    <!-- <arg name="use_ned_frame" value="$(arg use_ned_frame)"/> -->
    </include>
    <!-- <include file="$(find bluerov2_control)/launch/start_thruster_manager.launch"/> -->

    <group ns="/bluerov2/">
        <node name="bluerov2_odom_gt" pkg="osl_rlearning" type="bluerov2_pose.py" respawn="true" output="screen"/>
        <node name="bluerov2_control" pkg="osl_rlearning" type="bluerov2_control.py" respawn="true" output="screen"/>
        <node name="bluerov2_thrusters" pkg="osl_rlearning" type="bluerov2_thrusters.py" respawn="true" output="screen"/>
        <node name="bluerov2_dvl_fixed" pkg="osl_rlearning" type="bluerov2_dvl_sim.py" output="screen"/>
    </group>

    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find bluerov2_control)/rviz/bluerov2_control.rviz"/>

    <!-- <node pkg="osl_simulator" type="collate_bbox.py" name="collate_boxes"/> -->
    <!-- <node pkg="osl_simulator" type="bounding_box.py" name="bbox_gt" output="screen"/> -->
    <!-- <node pkg="osl_network" type="yolo_predict.py" name="bbox_pred" respawn="true" if="$(arg yolo_predict)"/> -->
</launch>